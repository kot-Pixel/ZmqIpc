// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ipc.proto
// Protobuf C++ Version: 6.32.0-dev

#ifndef ipc_2eproto_2epb_2eh
#define ipc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ipc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ipc_2eproto {
  static const ::uint32_t offsets[];
};
namespace ipc {
class IpcRequest;
struct IpcRequestDefaultTypeInternal;
extern IpcRequestDefaultTypeInternal _IpcRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataLite<15> IpcRequest_class_data_;
class IpcResponse;
struct IpcResponseDefaultTypeInternal;
extern IpcResponseDefaultTypeInternal _IpcResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataLite<16> IpcResponse_class_data_;
}  // namespace ipc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ipc {

// ===================================================================


// -------------------------------------------------------------------

class IpcResponse final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:ipc.IpcResponse) */ {
 public:
  inline IpcResponse() : IpcResponse(nullptr) {}
  ~IpcResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IpcResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IpcResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IpcResponse(::google::protobuf::internal::ConstantInitialized);

  inline IpcResponse(const IpcResponse& from) : IpcResponse(nullptr, from) {}
  inline IpcResponse(IpcResponse&& from) noexcept
      : IpcResponse(nullptr, ::std::move(from)) {}
  inline IpcResponse& operator=(const IpcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IpcResponse& operator=(IpcResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline ::std::string* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::std::string>();
  }

  static const IpcResponse& default_instance() {
    return *reinterpret_cast<const IpcResponse*>(
        &_IpcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(IpcResponse& a, IpcResponse& b) { a.Swap(&b); }
  inline void Swap(IpcResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IpcResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IpcResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<IpcResponse>(arena);
  }
  void CopyFrom(const IpcResponse& from);
  void MergeFrom(const IpcResponse& from) { IpcResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IpcResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ipc.IpcResponse"; }

 protected:
  explicit IpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  IpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IpcResponse& from);
  IpcResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, IpcResponse&& from) noexcept
      : IpcResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 2,
    kErrorFieldNumber = 3,
    kRequestIdFieldNumber = 1,
  };
  // bytes payload = 2;
  void clear_payload() ;
  const ::std::string& payload() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_payload();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_payload();
  void set_allocated_payload(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_payload() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_payload(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_payload();

  public:
  // string error = 3;
  void clear_error() ;
  const ::std::string& error() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error();
  void set_allocated_error(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_error() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error();

  public:
  // uint64 request_id = 1;
  void clear_request_id() ;
  ::uint64_t request_id() const;
  void set_request_id(::uint64_t value);

  private:
  ::uint64_t _internal_request_id() const;
  void _internal_set_request_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ipc.IpcResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 29,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const IpcResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::uint64_t request_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ipc_2eproto;
};

extern const ::google::protobuf::internal::ClassDataLite<16> IpcResponse_class_data_;
// -------------------------------------------------------------------

class IpcRequest final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:ipc.IpcRequest) */ {
 public:
  inline IpcRequest() : IpcRequest(nullptr) {}
  ~IpcRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IpcRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IpcRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IpcRequest(::google::protobuf::internal::ConstantInitialized);

  inline IpcRequest(const IpcRequest& from) : IpcRequest(nullptr, from) {}
  inline IpcRequest(IpcRequest&& from) noexcept
      : IpcRequest(nullptr, ::std::move(from)) {}
  inline IpcRequest& operator=(const IpcRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IpcRequest& operator=(IpcRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline ::std::string* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::std::string>();
  }

  static const IpcRequest& default_instance() {
    return *reinterpret_cast<const IpcRequest*>(
        &_IpcRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(IpcRequest& a, IpcRequest& b) { a.Swap(&b); }
  inline void Swap(IpcRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IpcRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IpcRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<IpcRequest>(arena);
  }
  void CopyFrom(const IpcRequest& from);
  void MergeFrom(const IpcRequest& from) { IpcRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IpcRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ipc.IpcRequest"; }

 protected:
  explicit IpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  IpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IpcRequest& from);
  IpcRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, IpcRequest&& from) noexcept
      : IpcRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodFieldNumber = 1,
    kPayloadFieldNumber = 2,
    kRequestIdFieldNumber = 3,
  };
  // string method = 1;
  void clear_method() ;
  const ::std::string& method() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_method(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_method();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_method();
  void set_allocated_method(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_method() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_method(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_method();

  public:
  // bytes payload = 2;
  void clear_payload() ;
  const ::std::string& payload() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_payload();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_payload();
  void set_allocated_payload(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_payload() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_payload(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_payload();

  public:
  // uint64 request_id = 3;
  void clear_request_id() ;
  ::uint64_t request_id() const;
  void set_request_id(::uint64_t value);

  private:
  ::uint64_t _internal_request_id() const;
  void _internal_set_request_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ipc.IpcRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 29,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const IpcRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr method_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::uint64_t request_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ipc_2eproto;
};

extern const ::google::protobuf::internal::ClassDataLite<15> IpcRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IpcRequest

// string method = 1;
inline void IpcRequest::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& IpcRequest::method() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ipc.IpcRequest.method)
  return _internal_method();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void IpcRequest::set_method(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.method_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ipc.IpcRequest.method)
}
inline ::std::string* PROTOBUF_NONNULL IpcRequest::mutable_method()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:ipc.IpcRequest.method)
  return _s;
}
inline const ::std::string& IpcRequest::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_.Get();
}
inline void IpcRequest::_internal_set_method(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.method_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL IpcRequest::_internal_mutable_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.method_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE IpcRequest::release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ipc.IpcRequest.method)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.method_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.method_.Set("", GetArena());
  }
  return released;
}
inline void IpcRequest::set_allocated_method(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.method_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.method_.IsDefault()) {
    _impl_.method_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.IpcRequest.method)
}

// bytes payload = 2;
inline void IpcRequest::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& IpcRequest::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ipc.IpcRequest.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void IpcRequest::set_payload(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ipc.IpcRequest.payload)
}
inline ::std::string* PROTOBUF_NONNULL IpcRequest::mutable_payload()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:ipc.IpcRequest.payload)
  return _s;
}
inline const ::std::string& IpcRequest::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void IpcRequest::_internal_set_payload(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.payload_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL IpcRequest::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.payload_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE IpcRequest::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ipc.IpcRequest.payload)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.payload_.Set("", GetArena());
  }
  return released;
}
inline void IpcRequest::set_allocated_payload(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.IpcRequest.payload)
}

// uint64 request_id = 3;
inline void IpcRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t IpcRequest::request_id() const {
  // @@protoc_insertion_point(field_get:ipc.IpcRequest.request_id)
  return _internal_request_id();
}
inline void IpcRequest::set_request_id(::uint64_t value) {
  _internal_set_request_id(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:ipc.IpcRequest.request_id)
}
inline ::uint64_t IpcRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void IpcRequest::_internal_set_request_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// -------------------------------------------------------------------

// IpcResponse

// uint64 request_id = 1;
inline void IpcResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t IpcResponse::request_id() const {
  // @@protoc_insertion_point(field_get:ipc.IpcResponse.request_id)
  return _internal_request_id();
}
inline void IpcResponse::set_request_id(::uint64_t value) {
  _internal_set_request_id(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:ipc.IpcResponse.request_id)
}
inline ::uint64_t IpcResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void IpcResponse::_internal_set_request_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// bytes payload = 2;
inline void IpcResponse::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& IpcResponse::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ipc.IpcResponse.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void IpcResponse::set_payload(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ipc.IpcResponse.payload)
}
inline ::std::string* PROTOBUF_NONNULL IpcResponse::mutable_payload()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:ipc.IpcResponse.payload)
  return _s;
}
inline const ::std::string& IpcResponse::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void IpcResponse::_internal_set_payload(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL IpcResponse::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.payload_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE IpcResponse::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ipc.IpcResponse.payload)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.payload_.Set("", GetArena());
  }
  return released;
}
inline void IpcResponse::set_allocated_payload(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.IpcResponse.payload)
}

// string error = 3;
inline void IpcResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& IpcResponse::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ipc.IpcResponse.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void IpcResponse::set_error(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ipc.IpcResponse.error)
}
inline ::std::string* PROTOBUF_NONNULL IpcResponse::mutable_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:ipc.IpcResponse.error)
  return _s;
}
inline const ::std::string& IpcResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void IpcResponse::_internal_set_error(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.error_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL IpcResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.error_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE IpcResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ipc.IpcResponse.error)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.error_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_.Set("", GetArena());
  }
  return released;
}
inline void IpcResponse::set_allocated_error(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.error_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_.IsDefault()) {
    _impl_.error_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ipc.IpcResponse.error)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ipc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ipc_2eproto_2epb_2eh
