// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ipc.proto
// Protobuf C++ Version: 6.32.0-dev

#include "ipc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ipc {

inline constexpr IpcResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR IpcResponse::IpcResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(IpcResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IpcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IpcResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IpcResponseDefaultTypeInternal() {}
  union {
    IpcResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IpcResponseDefaultTypeInternal _IpcResponse_default_instance_;

inline constexpr IpcRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR IpcRequest::IpcRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(IpcRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IpcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IpcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IpcRequestDefaultTypeInternal() {}
  union {
    IpcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IpcRequestDefaultTypeInternal _IpcRequest_default_instance_;
}  // namespace ipc
namespace ipc {
// ===================================================================

class IpcRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IpcRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_._has_bits_);
};

IpcRequest::IpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ipc.IpcRequest)
}
PROTOBUF_NDEBUG_INLINE IpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ipc::IpcRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        method_(arena, from.method_),
        payload_(arena, from.payload_) {}

IpcRequest::IpcRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IpcRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IpcRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_id_ = from._impl_.request_id_;

  // @@protoc_insertion_point(copy_constructor:ipc.IpcRequest)
}
PROTOBUF_NDEBUG_INLINE IpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        method_(arena),
        payload_(arena) {}

inline void IpcRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_id_ = {};
}
IpcRequest::~IpcRequest() {
  // @@protoc_insertion_point(destructor:ipc.IpcRequest)
  SharedDtor(*this);
}
inline void IpcRequest::SharedDtor(MessageLite& self) {
  IpcRequest& this_ = static_cast<IpcRequest&>(self);
  this_._internal_metadata_.Delete<::std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.method_.Destroy();
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IpcRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IpcRequest(arena);
}
constexpr auto IpcRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IpcRequest),
                                            alignof(IpcRequest));
}
constexpr auto IpcRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<15>{
      {
          &_IpcRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IpcRequest::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<IpcRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IpcRequest::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<IpcRequest>(), &IpcRequest::ByteSizeLong,
              &IpcRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_._cached_size_),
          true,
      },
      "ipc.IpcRequest",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<15> IpcRequest_class_data_ =
    IpcRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IpcRequest::GetClassData() const {
  return IpcRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2>
IpcRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IpcRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ipc::IpcRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string method = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.method_)}},
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.payload_)}},
    // uint64 request_id = 3;
    {::_pbi::TcParser::FastV64S1,
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.request_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string method = 1;
    {PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.method_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.payload_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 request_id = 3;
    {PROTOBUF_FIELD_OFFSET(IpcRequest, _impl_.request_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\16\6\0\0\0\0\0\0"
    "ipc.IpcRequest"
    "method"
  }},
};
PROTOBUF_NOINLINE void IpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc.IpcRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.method_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.payload_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.request_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IpcRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IpcRequest& this_ = static_cast<const IpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IpcRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ipc.IpcRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string method = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_method().empty()) {
      const ::std::string& _s = this_._internal_method();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ipc.IpcRequest.method");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bytes payload = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_payload().empty()) {
      const ::std::string& _s = this_._internal_payload();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // uint64 request_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_request_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_request_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc.IpcRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IpcRequest::ByteSizeLong(const MessageLite& base) {
  const IpcRequest& this_ = static_cast<const IpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IpcRequest::ByteSizeLong() const {
  const IpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ipc.IpcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string method = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_method().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_method());
      }
    }
    // bytes payload = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_payload().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_payload());
      }
    }
    // uint64 request_id = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_request_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_request_id());
      }
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void IpcRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IpcRequest*>(&to_msg);
  auto& from = static_cast<const IpcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ipc.IpcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_method().empty()) {
        _this->_internal_set_method(from._internal_method());
      } else {
        if (_this->_impl_.method_.IsDefault()) {
          _this->_internal_set_method("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_payload().empty()) {
        _this->_internal_set_payload(from._internal_payload());
      } else {
        if (_this->_impl_.payload_.IsDefault()) {
          _this->_internal_set_payload("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_request_id() != 0) {
        _this->_impl_.request_id_ = from._impl_.request_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::std::string>(from._internal_metadata_);
}

void IpcRequest::CopyFrom(const IpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc.IpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IpcRequest::InternalSwap(IpcRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_, &other->_impl_.method_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  swap(_impl_.request_id_, other->_impl_.request_id_);
}

// ===================================================================

class IpcResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IpcResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_._has_bits_);
};

IpcResponse::IpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ipc.IpcResponse)
}
PROTOBUF_NDEBUG_INLINE IpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ipc::IpcResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_(arena, from.payload_),
        error_(arena, from.error_) {}

IpcResponse::IpcResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IpcResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IpcResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_id_ = from._impl_.request_id_;

  // @@protoc_insertion_point(copy_constructor:ipc.IpcResponse)
}
PROTOBUF_NDEBUG_INLINE IpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_(arena),
        error_(arena) {}

inline void IpcResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_id_ = {};
}
IpcResponse::~IpcResponse() {
  // @@protoc_insertion_point(destructor:ipc.IpcResponse)
  SharedDtor(*this);
}
inline void IpcResponse::SharedDtor(MessageLite& self) {
  IpcResponse& this_ = static_cast<IpcResponse&>(self);
  this_._internal_metadata_.Delete<::std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IpcResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IpcResponse(arena);
}
constexpr auto IpcResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IpcResponse),
                                            alignof(IpcResponse));
}
constexpr auto IpcResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<16>{
      {
          &_IpcResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IpcResponse::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<IpcResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IpcResponse::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<IpcResponse>(), &IpcResponse::ByteSizeLong,
              &IpcResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_._cached_size_),
          true,
      },
      "ipc.IpcResponse",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<16> IpcResponse_class_data_ =
    IpcResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IpcResponse::GetClassData() const {
  return IpcResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2>
IpcResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IpcResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ipc::IpcResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 request_id = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.request_id_)}},
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.payload_)}},
    // string error = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.request_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string error = 3;
    {PROTOBUF_FIELD_OFFSET(IpcResponse, _impl_.error_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\0\5\0\0\0\0"
    "ipc.IpcResponse"
    "error"
  }},
};
PROTOBUF_NOINLINE void IpcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc.IpcResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.payload_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.request_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IpcResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IpcResponse& this_ = static_cast<const IpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IpcResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ipc.IpcResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 request_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_request_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_request_id(), target);
    }
  }

  // bytes payload = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_payload().empty()) {
      const ::std::string& _s = this_._internal_payload();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // string error = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_error().empty()) {
      const ::std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ipc.IpcResponse.error");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc.IpcResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IpcResponse::ByteSizeLong(const MessageLite& base) {
  const IpcResponse& this_ = static_cast<const IpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IpcResponse::ByteSizeLong() const {
  const IpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ipc.IpcResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // bytes payload = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_payload().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_payload());
      }
    }
    // string error = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // uint64 request_id = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_request_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_request_id());
      }
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<::std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void IpcResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IpcResponse*>(&to_msg);
  auto& from = static_cast<const IpcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ipc.IpcResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_payload().empty()) {
        _this->_internal_set_payload(from._internal_payload());
      } else {
        if (_this->_impl_.payload_.IsDefault()) {
          _this->_internal_set_payload("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_request_id() != 0) {
        _this->_impl_.request_id_ = from._impl_.request_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::std::string>(from._internal_metadata_);
}

void IpcResponse::CopyFrom(const IpcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc.IpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IpcResponse::InternalSwap(IpcResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  swap(_impl_.request_id_, other->_impl_.request_id_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ipc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
